import matplotlib.pyplot as plt
import numpy as np

"""
Converting dB into gain is often used in compressors, and rarely
graphical contexts. High accuracy is an absolute must in
compressors, but in graphics, small errors will result in an
offset of fraction of a pixel. In the case of sidechaining a
signal, lower accuracy may not be noticeable.

This makes the exp_mineiro function the only viable option
for an audio compressor. It's accurate enough to not introduce
noticeable aliasing, and is considerably faster than using
std::pow(10 ,x).
When pinpoint accuracy is not needed such as when sidechaining
or if used in graphics, the powx_ekmett_fast or exp_schraudolph
function are excellent choices.

The following table compares the speed and error margin of
different exp10 approxiamtions used in the following formula:
    exp10(x / 20)
    pow(10, x / 20)

SEC      xSPEED ERROR    NAME
0.055806                 pass
0.185658 1      0        powx_stl
0.091151 3.67   bad      powx_ekmett_fast_precise
0.090206 3.77   awful    powx_ekmett_fast_better_precise
0.081461 5.06   0.000001 exp_mineiro
0.066710 11.90  0.15     exp_mineiro_faster
0.065474 13.43  0.042    exp_ekmett_lb
0.065244 13.75  0.04     exp_ekmett_ub
0.063323 17.27  0.023    powx_ekmett_fast
0.063199 17.56  0.03     exp_schraudolph
0.063058 17.90  0.044    powx_ekmett_fast_lb
0.063003 18.04  0.04     powx_ekmett_fast_ub

- pass = no processing
- stl = pow(10, x)
- xSpeed of the exp10 function calculated: (stl - pass) / (other_sec - pass)
- Error is in gain
"""

powx_stl = [0.000063095693,0.000089125053,0.000125892519,0.000177827940,0.000251188554,0.000354813354,0.000501187285,0.000707945612,0.001000000047,0.001412537065,0.001995261991,0.002818383276,0.003981071059,0.005623413250,0.007943280041,0.011220183223,0.015848929062,0.022387212142,0.031622774899,0.044668357819,0.063095726073,0.089125081897,0.125892534852,0.177827939391,0.251188635826,0.354813367128,0.501187205315,0.707945764065,1.000000000000,1.412537574768,1.995262384415,2.818382978439,3.981071949005,]
powx_ekmett_fast = [0.000063993968,0.000094279647,0.000127060339,0.000187630765,0.000252263620,0.000373404473,0.000500813127,0.000743098557,0.000994205475,0.001478768885,0.001973554492,0.002942681313,0.003917396069,0.005855679512,0.007793933153,0.011651933193,0.015528440475,0.023185014725,0.030938148499,0.046132326126,0.061638593674,0.091789722443,0.122801780701,0.182628631592,0.244652748108,0.363355636597,0.487405776978,0.722908020020,0.971008300781,1.438217163086,1.934410095215,2.861206054688,3.853607177734,]
powx_ekmett_fast_lb = [0.000077143777,0.000106898602,0.000151235610,0.000210745260,0.000296369195,0.000415386632,0.000580530614,0.000818565488,0.001136645675,0.001612722874,0.002224460244,0.003176614642,0.004351258278,0.006255567074,0.008507251740,0.012315809727,0.016623854637,0.024240970612,0.032466411591,0.047700881958,0.063370227814,0.093839168549,0.124307632446,0.184553146362,0.245491027832,0.362855911255,0.484731674194,0.713211059570,0.956962585449,1.401428222656,1.888923645020,2.752838134766,3.727844238281,]
powx_ekmett_fast_ub = [0.000060684048,0.000090875663,0.000121418387,0.000181851909,0.000242937356,0.000363904983,0.000486075878,0.000728208572,0.000972550362,0.001457221806,0.001945905387,0.002916052938,0.003893420100,0.005835294724,0.007790029049,0.011677026749,0.015586495399,0.023366928101,0.031185865402,0.046759605408,0.062397241592,0.093570232391,0.124845981598,0.187243461609,0.249794960022,0.374691009521,0.499794006348,0.749794006348,1.000000000000,1.500411987305,2.001647949219,3.002471923828,4.006591796875,]
powx_ekmett_fast_precise = [0.000060606002,0.000086021624,0.000129869921,0.000173913038,0.000256410654,0.000341881765,0.000506329467,0.000672267517,0.001000000047,0.001418442116,0.001960793743,0.002797193360,0.003846144769,0.005517241545,0.007547187153,0.011494317092,0.015624940395,0.022471848875,0.030769230798,0.043956160545,0.060606002808,0.086021617055,0.129869922996,0.173913046718,0.256410658360,0.341881781816,0.506329476833,0.672267556190,1.000000000000,1.487503051758,1.974998474121,2.924987792969,3.899993896484,]
powx_ekmett_fast_better_precise = [0.000082747116,0.000096353615,0.000406226318,0.000472348416,0.000548873213,0.000638472091,0.000744808582,0.000873065786,0.001000000047,0.004272461403,0.004965832923,0.005771282595,0.006718446501,0.007848160341,0.009218933061,0.038614250720,0.044925946742,0.052205715328,0.060695417225,0.070722520351,0.082747116685,0.096353620291,0.406226336956,0.472348392010,0.548873186111,0.638472139835,0.744808614254,0.873065769672,1.000000000000,1.145389080048,1.342626810074,1.566239118576,1.821914434433,]
exp_ekmett_lb = [0.000059870072,0.000089118257,0.000119531527,0.000177819282,0.000238645822,0.000354802236,0.000476455316,0.000707935542,0.000951241702,0.001412525773,0.001899138093,0.002818375826,0.003791600466,0.005623400211,0.007569819689,0.011220037937,0.015112936497,0.022386670113,0.030172348022,0.044666290283,0.060237884521,0.089118957520,0.120261669159,0.177809715271,0.240096092224,0.354764938354,0.479335784912,0.707817077637,0.956962585449,1.412216186523,1.910507202148,2.817596435547,3.814178466797,]
exp_ekmett_ub = [0.000063958578,0.000094371848,0.000127499923,0.000188326463,0.000254165381,0.000375816599,0.000506658107,0.000749964267,0.001009978354,0.001496583223,0.002013266087,0.002986490726,0.004013180733,0.005959630013,0.007999598980,0.011892497540,0.015945792198,0.023731589317,0.031784534454,0.047356128693,0.063355445862,0.094498634338,0.126282691956,0.188569068909,0.251710891724,0.376283645630,0.501708984375,0.750854492188,1.000000000000,1.498291015625,1.996582031250,2.989746093750,3.986328125000,]
exp_schraudolph = [0.000060727354,0.000090832822,0.000121246092,0.000181248412,0.000242074952,0.000361660495,0.000483313575,0.000721652061,0.000964958221,0.001439958811,0.001926571131,0.002873241901,0.003846466541,0.005733132362,0.007679551840,0.011439502239,0.015332400799,0.022825598717,0.030611276627,0.045544147491,0.061115741730,0.090874671936,0.122017383575,0.181321144104,0.243607521057,0.361787796021,0.486358642578,0.721862792969,0.971008300781,1.440307617188,1.938598632812,2.873779296875,3.870361328125,]
exp_mineiro = [0.000063093845,0.000089125242,0.000125888735,0.000177828595,0.000251183286,0.000354815274,0.000501174480,0.000707946718,0.000999972224,0.001412540674,0.001995205879,0.002818405628,0.003980994225,0.005623430014,0.007943093777,0.011220216751,0.015848636627,0.022387385368,0.031622409821,0.044668674469,0.063095092773,0.089125633240,0.125890731812,0.177828788757,0.251186370850,0.354814529419,0.501182556152,0.707950592041,1.000000000000,1.412544250488,1.995285034180,2.818389892578,3.981079101562,]
exp_mineiro_faster = [0.000060748309,0.000090874266,0.000121287536,0.000181331299,0.000242157839,0.000361826271,0.000483479351,0.000721983612,0.000965289772,0.001440621912,0.001927234232,0.002874568105,0.003847792745,0.005735754967,0.007682204247,0.011444807053,0.015337705612,0.022836208344,0.030621886253,0.045565366745,0.061136960983,0.090917110443,0.122059822083,0.181406021118,0.243692398071,0.361957550049,0.486528396606,0.722202301025,0.971347808838,1.440986633301,1.939277648926,2.875122070312,3.871704101562,]
x_labels = [
    -84, -81, -78, -75,
    -72, -69, -66, -63,
    -60, -57, -54, -51,
    -48, -45, -42, -39,
    -36, -33, -30, -27,
    -24, -21, -18, -15,
    -12, -9, -6, -3,
    0, 3, 6, 9,
    12
]

class Styles:
    idx = 0
    types = ['solid', 'dotted', 'dashed', 'dashdot']

    def get(self):
        s = self.types[self.idx]
        self.idx = (self.idx + 1) & 3
        return s

linestyles = Styles()

fig, ax = plt.subplots()


x_ticks = [i for i in range(len(x_labels))]
x = [i for i in range(len(powx_stl))]

plt.xlabel('dB')
plt.xticks(ticks=x_ticks, labels=x_labels)
plt.ylabel('Gain')

ax.plot(powx_stl, label='powx_stl', linestyle=linestyles.get())
ax.plot(powx_ekmett_fast, label='powx_ekmett_fast', linestyle=linestyles.get())
ax.plot(powx_ekmett_fast_lb, label='powx_ekmett_fast_lb', linestyle=linestyles.get())
ax.plot(powx_ekmett_fast_ub, label='powx_ekmett_fast_ub', linestyle=linestyles.get())
ax.plot(powx_ekmett_fast_precise, label='powx_ekmett_fast_precise', linestyle=linestyles.get())
ax.plot(powx_ekmett_fast_better_precise, label='powx_ekmett_fast_better_precise', linestyle=linestyles.get())
ax.plot(exp_ekmett_lb, label='exp_ekmett_lb', linestyle=linestyles.get())
ax.plot(exp_ekmett_ub, label='exp_ekmett_ub', linestyle=linestyles.get())
ax.plot(exp_schraudolph, label='exp_schraudolph', linestyle=linestyles.get())
ax.plot(exp_mineiro, label='exp_mineiro', linestyle=linestyles.get())
ax.plot(exp_mineiro_faster, label='exp_mineiro_faster', linestyle=linestyles.get())

ax.legend()
plt.show()
